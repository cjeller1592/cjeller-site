I"’<p>One thing that I love about PaaS services is how quickly you can create a proof of concept. Recently Iâ€™ve found out about CanaryTokens, a free &amp; easy honeypot tool. In particular, thereâ€™s a type of token that triggers an alert when your website is cloned. How could I test this out without much hassle? PaaS.</p>

<p>The test website  be made on Glitch. All I did was spin up a static site from their templates.</p>

<p><img src="/images/Glitch site.png" alt="" /></p>

<p>In a matter of seconds I had a site I could put the token in. Next I created a Canarytoken using the auto-generated URL Glitch gave my site.</p>

<p><img src="/images/Canary.png" alt="" /></p>

<p>Once the token is created, youâ€™ll receive some JavaScript that you add to your site. It was just a matter of adding the code to my siteâ€™s JavaScript file the site using Glitchâ€™s in-browser editor.</p>

<p><img src="/images/Glitch editor.png" alt="" /></p>

<p>Now that my site is all set up, Iâ€™ll play the role of the attacker. I want to clone the site to trick people to click stuff they shouldnâ€™t. Anyways, Iâ€™ll go into my terminal and pull the site down recursively using wget.</p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>wget -r https://geode-living-jackrabbit.glitch.me/
</code></pre></div></div>

<p>With the site in a local directory, I want to deploy it as a fake website to activate the token. Thereâ€™s an easy to do this. Netlify has a wonderful service called <a href="https://app.netlify.com/drop">Netlify Drop</a>. All you have to do is drag in the folder with your siteâ€™s HTML, CSS, &amp; JavaScript and Netlify deploys the site for you. (Iâ€™m surprised I only heard about it now â€” itâ€™s been around since 2018)</p>

<p>So now I just drag the folder of the Canarytoken site into Netlify Drop.</p>

<p><img src="/images/Netlify Drop.png" alt="" /></p>

<p>As soon as the site is live I receive an email alert that the Canarytoken was triggered!</p>

<p><img src="/images/Canary Alert.png" alt="" /></p>

<p>Whatâ€™s interesting here is that the source IP address belongs to an AWS EC2 instance. This gives us a glimpse into both Netlify and the attacker. Netlify probably uses an automated process to put my site into an available EC2 instance running some version of Linux. All of which happens in the background as I drag and drop a folder into Netlify Drop.</p>

<p>If the Cloud wasnâ€™t an abstraction already, PaaS is an abstraction of an abstraction. They not only hide the computer from you but the cloud as well. This can be a good thing. Platforms like Glitch and Netlify manage cloud infrastructure so you can focus on building your app rather than configuring the EC2 instance that hosts your app. While this is already common knowledge, I find it fascinating that this knowledge arose from using Canarytokens.</p>

<p>I also canâ€™t help but think of how PaaS makes it easy for phishing sites to be deployed. PaaS also gives an attacker yet another means to obfuscate their whereabouts. We only know that the attacker deployed her site using an EC2 instance from an AWS data center in North Virginia. That doesnâ€™t mean sheâ€™s there. It also doesnâ€™t mean she used AWS directly â€” enter PaaS middlemen like Glitch and Netlify.</p>

<p>And yet these platforms advise against using their services for such purposes â€” itâ€™s laid out in the terms of service. Does that stop people though? Iâ€™m curious how Glitch and Netlify try to curb these phishing sites. For one, sites made on each platform without an account expire after a period of time. Thatâ€™s just one control thatâ€™s simple but effective against driveby phishing attempts. What about phishing from those with accounts? What then?</p>

<p>These questions come from the democratizing power of PaaS platforms like Glitch and Netlify. What does security look like when anyone can host a web app by dragging and dropping a folder?</p>
:ET